[{"D:\\minbeom\\src\\index.js":"1","D:\\minbeom\\src\\App.js":"2","D:\\minbeom\\src\\reportWebVitals.js":"3","D:\\minbeom\\src\\components\\Board\\ListBoardComponent.js":"4","D:\\minbeom\\src\\Components\\Board\\ListBoardComponent.js":"5","D:\\minbeom\\src\\components\\board\\ListBoardComponent.js":"6","D:\\minbeom\\src\\components\\board\\EditorComponent.js":"7","D:\\minbeom\\src\\components\\board\\ReadBoardComponent.js":"8","D:\\minbeom\\src\\components\\board\\BoardDetailComponent.js":"9","D:\\minbeom\\src\\components\\header\\HeaderComponent.js":"10","D:\\minbeom\\src\\components\\calendar\\CalendarComponent.js":"11","D:\\minbeom\\src\\components\\board\\ImageDropAndPaste.js":"12","D:\\minbeom\\src\\components\\account\\AccountBookComponent.js":"13"},{"size":557,"mtime":1611926645248,"results":"14","hashOfConfig":"15"},{"size":1420,"mtime":1618134493321,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":0,"mtime":1613913006944,"results":"18","hashOfConfig":"15"},{"size":0,"mtime":1613918468872,"results":"19","hashOfConfig":"15"},{"size":3087,"mtime":1617455248238,"results":"20","hashOfConfig":"15"},{"size":4381,"mtime":1617279077786,"results":"21","hashOfConfig":"15"},{"size":1913,"mtime":1617456690324,"results":"22","hashOfConfig":"15"},{"size":3064,"mtime":1617455043372,"results":"23","hashOfConfig":"15"},{"size":1294,"mtime":1618140143896,"results":"24","hashOfConfig":"15"},{"size":5297,"mtime":1614252094614,"results":"25","hashOfConfig":"15"},{"size":6865,"mtime":1615301048268,"results":"26","hashOfConfig":"15"},{"size":1954,"mtime":1619684235001,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"x5xcn8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\minbeom\\src\\index.js",[],["62","63"],"D:\\minbeom\\src\\App.js",["64"],"import './App.css';\r\nimport React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport ListBoardComponent from './components/board/ListBoardComponent';\r\nimport ReadBoardComponent from './components/board/ReadBoardComponent';\r\nimport BoardDetailComponent from './components/board/BoardDetailComponent';\r\nimport HeaderComponent from './components/header/HeaderComponent';\r\nimport CalendarComponent from './components/calendar/CalendarComponent';\r\nimport AccountBookComponent from './components/account/AccountBookComponent';\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return( \r\n            <Router>\r\n                <HeaderComponent/>\r\n                <Switch>\r\n                    <Route path = \"/\" exact component = {ListBoardComponent}></Route>\r\n                    <Route path = \"/board\" component = {ListBoardComponent}></Route>\r\n                    <Route path = \"/board-detail\" component = {BoardDetailComponent}></Route>\r\n                    <Route path = \"/board-read\" component = {ReadBoardComponent}></Route>\r\n                    <Route path = \"/calendar\" component = {CalendarComponent}></Route>\r\n                    <Route path = \"/accountbook\" component = {AccountBookComponent}></Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","D:\\minbeom\\src\\reportWebVitals.js",[],"D:\\minbeom\\src\\components\\Board\\ListBoardComponent.js",[],"D:\\minbeom\\src\\Components\\Board\\ListBoardComponent.js",[],"D:\\minbeom\\src\\components\\board\\ListBoardComponent.js",["65","66","67","68","69","70"],"import React, { Component,Fragment } from 'react';\r\nimport { Navbar, Nav, Button,Form, FormControl, NavDropdown, Modal, Table} from 'react-bootstrap';\r\nimport './ListBoardComponent.css';\r\n\r\nclass ListBoardComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = { \r\n            boards: [],\r\n            boardseq: '',\r\n        }\r\n\t\t\r\n\t\tthis.createBoard = this.createBoard.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            fetch('http://192.168.68.128/BoardList.php',{ \r\n              method: 'POST',\r\n              headers:{\r\n              }\r\n          }).then(res => res.json()).then((response) => {\r\n            this.setState({ boards: response});\r\n        });\r\n        } catch (err) {\r\n            return console.error('err',err);\r\n        }\r\n\r\n    }\r\n\t\r\n\tcreateBoard() {\r\n        this.props.history.push('/board-detail/');\r\n    }\r\n\r\n    onClick = (event) =>{\r\n        \r\n\r\n        this.setState({boardseq:  event.currentTarget.getAttribute('id')}, () => { \r\n            this.props.history.push('/board-read?boardseq='+this.state.boardseq);\r\n        });\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Fragment>\r\n            <div>\r\n                <h2 className=\"text-center\">육아일기</h2>\r\n                \r\n\t\t\t\t<div className = \"boardrow\">\r\n                    <Button className=\"btn btn-createboard\" onClick={this.createBoard}> 글 작성</Button>\r\n                </div>\r\n                <div className =\"boardrow\">\r\n                    <Table className=\"board-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>글 번호</th>\r\n                                <th>타이틀 </th>\r\n                                <th>작성일 </th>\r\n                                <th>갱신일 </th>\r\n                                <th>좋아요수</th>\r\n                                <th>조회수</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.boards.map(\r\n                                    board => \r\n                                    <tr key = {board.boardseq} id={board.boardseq} onClick={this.onClick}>\r\n                                        <td > {board.boardseq}  </td>\r\n                                        <td> {board.boardtitle} </td>\r\n                                        <td> {board.createdtime} </td>\r\n                                        <td> {board.updatedtime} </td>\r\n                                        <td> {board.likes} </td>\r\n                                        <td> {board.counts} </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListBoardComponent;","D:\\minbeom\\src\\components\\board\\EditorComponent.js",["71","72","73"],"import base64 from 'base-64';\r\nimport React, { Component, useMemo } from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport ImageResize from 'quill-image-resize-module-react';  // import as default\r\nimport QuillImageDropAndPaste from \"./ImageDropAndPaste\";\r\nQuill.register('modules/imageResize', ImageResize);\r\nQuill.register(\"modules/imageDropAndPaste\", QuillImageDropAndPaste);\r\n\r\n\r\n\r\nclass EditorComponent extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  formats = [\r\n        //'font',\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image',\r\n        'align', 'color', 'background',        \r\n  ]\r\n  modules = { \r\n    imageDropAndPaste: { handler: this.imageHandler1  },\r\n    toolbar:{\r\n      container: [\r\n        //[{ 'font': [] }],\r\n        [{ 'header': [1, 2, false] }],\r\n        ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n        ['link', 'image'],\r\n        [{ 'align': [] }, { 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n        ['clean'],\r\n      ],\r\n      handlers: {\r\n        image: this.imageHandler,\r\n      },\r\n    },\r\n    imageResize: {\r\n      handleStyles: {\r\n        backgroundColor: 'black',\r\n        border: 'none',\r\n        color: 'white',\r\n      },\r\n      modules: ['Resize', 'DisplaySize', 'Toolbar'],\r\n    },\r\n  }\r\n  \r\n  imageHandler()  {\r\n    const input = document.createElement('input');\r\n    input.setAttribute('type', 'file');\r\n    input.setAttribute('accept', 'image/*');\r\n    input.click();\r\n    input.onchange = async function() {\r\n      const file = input.files[0];\r\n      console.log('User trying to uplaod this:', file);\r\n\r\n      var formData = new FormData();\r\n      formData.append(\"image\",file);\r\n\r\n      const range = this.quill.getSelection();\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        body: formData,\r\n      };\r\n      \r\n      try {\r\n      fetch('http://192.168.68.128/ImageUpload.php', options)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n            const link = response[\"url\"];\r\n            this.quill.insertEmbed(range.index, 'image', link); \r\n        });\r\n      }\r\n      catch(err)\r\n      {\r\n        return console.error('err',err);\r\n      }\r\n      // const link = 'http://192.168.68.128/minbeom.jpg';\r\n      // this part the image is inserted\r\n      // by 'image' option below, you just have to put src(link) of img here. \r\n      \r\n    }.bind(this); // react thing\r\n  }\r\n\r\n  imageHandler1(dataUrl, type, imageData, callback) {\r\n      imageData\r\n        .minify({\r\n          maxWidth: 320,\r\n          maxHeight: 320,\r\n          quality: 0.7\r\n        })\r\n        .then(miniImageData => {\r\n          console.log(typeof dataUrl);\r\n          console.log(typeof miniImageData);\r\n          console.log(typeof miniImageData.dataUrl);\r\n          // const blob = miniImageData.toBlob();\r\n          // const file = miniImageData.toFile(\"my_cool_image.png\");\r\n          // console.log(`type: ${type}`);\r\n          // console.log(`dataUrl: ${dataUrl.length}`);\r\n          // console.log(`blob: ${blob}`);\r\n          // console.log(`miniImageData: ${miniImageData}`);\r\n          // console.log(`file: ${file}`);\r\n  \r\n          // setImage({ type, dataUrl, blob, file });\r\n          console.log(\"Calling...\");\r\n          // callback.call(this, miniImageData.dataUrl);\r\n          callback.call(this, miniImageData.dataUrl);\r\n      });\r\n\r\n  }\r\n\r\n  onQuillChange = (content, delta, source, editor) =>{\r\n    this.props.onChange(editor.getHTML());\r\n    \r\n    console.log(editor.getHTML());\r\n  }\r\n\r\n    render(){\r\n        // const { value, onChange } = this.props;\r\n        \r\n        return(\r\n\r\n                <ReactQuill\r\n                    ref={this.quill}\r\n                    style={{height: \"600px\"}} \r\n                    theme=\"snow\" \r\n                    modules={this.modules} \r\n                    formats={this.formats} \r\n                    value={this.props.value || ''} \r\n                    //onChange={(content, delta, source, editor) => onChange(editor.getHTML())}\r\n                    onChange={this.onQuillChange}\r\n                />\r\n        );\r\n    }\r\n}\r\nexport default EditorComponent","D:\\minbeom\\src\\components\\board\\ReadBoardComponent.js",["74"],"import React, { Component,Fragment } from 'react';\r\nimport { Button, Form, FormControl } from 'react-bootstrap';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport './ReadBoardComponent.css';\r\n\r\nclass ReadBoardComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n        this.state = {\r\n            title: '',\r\n            contents: '',\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const boardseq = params.get('boardseq');\r\n\r\n        fetch('http://192.168.68.128/BoardGet.php?' + new URLSearchParams({ boardseq: boardseq })\r\n        ).then(res => res.json()).then((response) => {\r\n            this.setState({ title: response[0].boardtitle});\r\n            this.setState({ contents: response[0].boardcontent});\r\n        });\r\n    }\r\n\r\n    onUpdateClick = (event) =>{\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const boardseq = params.get('boardseq');\r\n        this.props.history.push('/board-detail?boardseq='+boardseq);\r\n    }\r\n\r\n    onListClick = (event) =>{\r\n            this.props.history.push('/board');\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className='ReadBoard'>\r\n                    <div className='ReadHeader'>\r\n                        <Form.Label>{this.state.title}</Form.Label>\r\n                    </div>\r\n                    <div>{ReactHtmlParser(this.state.contents)}</div>\r\n                    <div>\r\n                        <Button onClick={this.onUpdateClick}>수정</Button>\r\n                        <Button onClick={this.onListClick}>목록</Button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReadBoardComponent;","D:\\minbeom\\src\\components\\board\\BoardDetailComponent.js",["75"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormControl } from 'react-bootstrap';\r\nimport Editor from './EditorComponent';\r\n\r\n\r\nclass BoardDetailComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            contents: '',\r\n        }\r\n\r\n       \r\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\r\n        this.changeContentsHandler = this.changeContentsHandler.bind(this);\r\n        this.createBoard = this.createBoard.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const boardseq = params.get('boardseq');\r\n\r\n        fetch('http://192.168.68.128/BoardGet.php?' + new URLSearchParams({ boardseq: boardseq })\r\n        ).then(res => res.json()).then((response) => {\r\n            this.setState({ title: response[0].boardtitle});\r\n            this.setState({ contents: response[0].boardcontent});\r\n        });\r\n\r\n    }\r\n\r\n    changeTitleHandler = (event) => {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    \r\n    changeContentsHandler = (value) => {\r\n        this.setState({contents: value});\r\n    }\r\n    \r\n    createBoard = (event) => {\r\n        event.preventDefault();\r\n\r\n        var board = new FormData();\r\n        board.append('boardtitle',this.state.title);\r\n        board.append('boardcontent',this.state.contents);\r\n\r\n        try {\r\n            fetch('http://192.168.68.128/BoardSave.php',{ \r\n              method: 'POST',\r\n              headers:{\r\n\r\n              },\r\n              body: board\r\n          }).then(res => res.json()).then(response => {\r\n            this.props.history.push('/board');\r\n            \r\n        });\r\n        } catch (err) {\r\n            return console.error('err',err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    cancel() {\r\n        this.props.history.push('/board');\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"text-center\">새글을 작성해주세요</h3>\r\n                <div className = \"card-body\">\r\n                    <form>\r\n                        <div className = \"form-group\">\r\n                            <Form.Label> Title </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"title\" name=\"title\" className=\"form-control\" \r\n                            value={this.state.title} onChange={this.changeTitleHandler}/>\r\n                        </div>\r\n                        <Editor value={this.state.contents} onChange={this.changeContentsHandler} />\r\n                        <div>&nbsp;</div><div>&nbsp;</div>\r\n                        <Button className=\"btn btn-success\" onClick={this.createBoard}>Save</Button>\r\n                        <Button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</Button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoardDetailComponent;","D:\\minbeom\\src\\components\\header\\HeaderComponent.js",["76","77","78"],"import React, { Component,Fragment } from 'react';\r\nimport { Navbar, Nav, Button,Form, FormControl, NavDropdown, Modal, Table} from 'react-bootstrap';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n        this.state = {\r\n            title: '',\r\n            contents: '',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar className=\"color-nav\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">홍수빈's 공간</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/calendar\">켈린더</Nav.Link>\r\n                <Nav.Link href=\"/\">베이킹</Nav.Link>\r\n                <NavDropdown title=\"일기\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"/\">가족일기</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/\">육아일기</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Link href=\"/accountbook\">가계부</Nav.Link>\r\n            </Nav>\r\n            <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-light\">Search</Button>\r\n            </Form>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","D:\\minbeom\\src\\components\\calendar\\CalendarComponent.js",["79","80","81","82"],"import './CalendarComponent.css';\n\nimport React, { Fragment, Component } from 'react';\nimport { Navbar, Nav, Button,Form, FormControl, NavDropdown, Modal} from 'react-bootstrap';\nimport moment from 'moment';\nimport \"moment/locale/ko\";\nimport  {Calendar,momentLocalizer}  from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport  DatePicker  from  \"react-datepicker\" ;\n\n\n\nconst localizer = momentLocalizer(moment);\n\nclass CalendarComponent extends Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      calendarYM : moment(),\n      today : moment(),\n      selected : moment().format(\"YYYY-MM-DD\"),\n      showModal: false,\n      title: '',\n      start: new Date(), \n      end: new Date(), \n      event: []\n    };\n    \n    this.moveMonth = this.moveMonth.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    // this.onChange = this.onChange.bind(this);\n    \n\n  }\n\n  componentDidMount = () =>{\n    try {\n      fetch('http://192.168.68.128/CalendarQuery.php',{ \n        method: 'POST',\n        headers:{\n        }\n    }).then(res => res.json())\n    .then(response => {\n                          \n                          for(let i = 0; i<response.length; i++)\n                          {\n                            response[i]['start'] =  new Date(response[i]['start'].toString());\n                            response[i]['end'] =  new Date(response[i]['end'].toString());\n                          }\n                          \n                          this.setState( {event: response} );   \n                          console.log(this.state.event);\n                      }\n    );\n    } catch (err) {\n      return console.error('err',err);\n    }\n  }\n\n  static defaultProps = {\n    clickFn : ()=>{}\n  }\n\n  moveMonth = (month) => {\n    this.setState({\n        calendarYM : this.state.calendarYM.add(month,'M')\n    })\n  }\n\n  changeSelected = (clickedDate) =>{\n        \n    if(moment(clickedDate).isSame(this.state.selected,'day')){\n        this.props.clickFn(clickedDate);\n        return;\n    }\n\n    this.setState({\n        selected : clickedDate\n    })\n\n    this.props.clickFn(clickedDate)\n    \n    if(moment(clickedDate).isBefore(this.state.calendarYM,'month')){\n        this.moveMonth(-1)\n    }else if(moment(clickedDate).isAfter(this.state.calendarYM,'month')){\n        this.moveMonth(1)\n    }\n  }\n\n\n\n  onSubmit = () =>{\n    var formData = new FormData();\n\n    var start = moment(this.state.start).format('YYYY/MM/DD/HH:mm:ss');\n    var end = moment(this.state.end).format('YYYY/MM/DD/HH:mm:ss');\n\n    formData.append('title',this.state.title);\n    formData.append('start',start);\n    formData.append('end',end);\n\n    try {\n      fetch('http://192.168.68.128/CalendarSave.php',{ \n        method: 'POST',\n        headers:{\n          // 'Content-Type': 'application/json',\n          // 'Accept': 'application/json'\n        },\n        body: formData\n    }).then(res => res.json())\n    .then(response => { console.log(response); });\n    } catch (err) {\n      return console.error('err',err);\n    }\n  }\n\n  onTitleChange = (e) =>{\n    this.setState({title : e.target.value });\n  }\n\n  onStartChange = (date) =>{\n    this.setState({start : date });\n  }\n\n  onEndChange = (date) =>{\n    this.setState({end : date });\n  }\n\n  openModal = () =>{\n    this.setState({showModal : true });\n  }\n\n  closeModal = () =>{\n    this.setState({showModal : false });\n  }\n\n  render(){\n  \n    return(\n      <Fragment>\n        <div className=\"minbeom\">\n          <Calendar localizer={localizer} events={this.state.event} />\n        </div>\n        <Button variant=\"primary\" onClick={this.openModal}>이벤트 등록</Button>\n        <Modal\n                show={this.state.showModal}\n                onHide={this.closeModal}\n                backdrop=\"static\"\n                keyboard={false}>\n                <Modal.Header closeButton>\n                <Modal.Title>이벤트 등록</Modal.Title>\n                    </Modal.Header>\n                <Modal.Body>\n                  <Form>\n                    <Form.Row>\n                      <Form.Label>이벤트날짜</Form.Label>\n                    </Form.Row>\n                    <Form.Row>\n                      <DatePicker selected={this.state.start} showTimeSelect dateFormat=\"Pp\" onChange={this.onStartChange} selectsStart startDate={this.state.start} endDate={this.state.end} />\n                      {' ~ '}\n                      <DatePicker selected={this.state.end} showTimeSelect dateFormat=\"Pp\" onChange={this.onEndChange} selectsEnd startDate={this.state.start} endDate={this.state.end} minDate={this.state.start}/>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label>이벤트</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"설명\" onChange={this.onTitleChange}/>\n                    </Form.Row>\n                  </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.onSubmit}>저장</Button>\n                </Modal.Footer>\n            </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default CalendarComponent;\n","D:\\minbeom\\src\\components\\board\\ImageDropAndPaste.js",[],"D:\\minbeom\\src\\components\\account\\AccountBookComponent.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":5,"nodeType":"89","messageId":"90","endLine":14,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"95","line":2,"column":18,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"91","severity":1,"message":"96","line":2,"column":30,"nodeType":"93","messageId":"94","endLine":2,"endColumn":34},{"ruleId":"91","severity":1,"message":"97","line":2,"column":36,"nodeType":"93","messageId":"94","endLine":2,"endColumn":47},{"ruleId":"91","severity":1,"message":"98","line":2,"column":49,"nodeType":"93","messageId":"94","endLine":2,"endColumn":60},{"ruleId":"91","severity":1,"message":"99","line":2,"column":62,"nodeType":"93","messageId":"94","endLine":2,"endColumn":67},{"ruleId":"91","severity":1,"message":"100","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":14},{"ruleId":"91","severity":1,"message":"101","line":2,"column":28,"nodeType":"93","messageId":"94","endLine":2,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":13,"column":3,"nodeType":"89","messageId":"90","endLine":16,"endColumn":4},{"ruleId":"91","severity":1,"message":"97","line":2,"column":24,"nodeType":"93","messageId":"94","endLine":2,"endColumn":35},{"ruleId":"91","severity":1,"message":"97","line":2,"column":24,"nodeType":"93","messageId":"94","endLine":2,"endColumn":35},{"ruleId":"91","severity":1,"message":"102","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"91","severity":1,"message":"99","line":2,"column":62,"nodeType":"93","messageId":"94","endLine":2,"endColumn":67},{"ruleId":"91","severity":1,"message":"103","line":2,"column":69,"nodeType":"93","messageId":"94","endLine":2,"endColumn":74},{"ruleId":"91","severity":1,"message":"92","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"95","line":4,"column":18,"nodeType":"93","messageId":"94","endLine":4,"endColumn":21},{"ruleId":"91","severity":1,"message":"97","line":4,"column":36,"nodeType":"93","messageId":"94","endLine":4,"endColumn":47},{"ruleId":"91","severity":1,"message":"98","line":4,"column":49,"nodeType":"93","messageId":"94","endLine":4,"endColumn":60},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Modal' is defined but never used.","'base64' is defined but never used.","'useMemo' is defined but never used.","'Fragment' is defined but never used.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]